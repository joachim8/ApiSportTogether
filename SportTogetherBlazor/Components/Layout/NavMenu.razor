@inherits LayoutComponentBase
@using SportTogetherBlazor.Services
@using SportTogetherBlazor.Models
@inject NavigationManager NavigationManager
@inject SessionStorageServices session
<div class="d-flex flex-column flex-shrink-0 p-3 text-white bg-dark position-sticky" style="width: 280px;">
    <a href="/SportTogether" class="d-flex align-items-center mb-3 mb-md-0 me-md-auto text-white text-decoration-none">
        <img src="images/logo-blanc.png" class="img-fluid align-self-center p-1" style="width:70px; height:70px;" />
        <span class="fs-4">SportTogether</span>
    </a>
    <hr>
    <ul class="nav nav-pills flex-column mb-auto">
        <li class="nav-item h-auto @(linkClickedStates["Annonces"] ? "clicked-style" : "")" @onclick="@(() => ToggleClick("Annonces"))">
            <a href="/SportTogether/Annonces" class="nav-link text-white text-center text-capitalize" aria-current="page">
                <Icon Name="IconName.House" Color="IconColor.Light" Size="IconSize.x4" class="p-2" />
                Annonces
            </a>
        </li>
        <li class="nav-item h-auto @(linkClickedStates["MessagerieInstantane"] ? "clicked-style" : "")" @onclick="@(() => ToggleClick("MessagerieInstantane"))">
            <a href="/SportTogether/MessagerieInstantane" class="nav-link text-white text-center text-capitalize" aria-current="page">
                <Icon Name="IconName.Messenger" Color="IconColor.Light" Size="IconSize.x4" class="p-2" />
                Messagerie
            </a>
            @if (messageCount)
            {
                <Badge Color="BadgeColor.Danger" Placement="BadgePlacement.MiddleRight">@nbrMessages</Badge>
            }
        </li>
    </ul>

    <hr>
    <div class="dropdown">
        <a href="#" class="d-flex align-items-center text-white text-decoration-none dropdown-toggle" id="dropdownUser1" data-bs-toggle="dropdown" aria-expanded="false">
            @if (utilisateurInfo != null)
            {
                <img src="@urlPhotoProfil" alt="" width="32" height="32" class="rounded-circle me-2">
                <strong>@utilisateurInfo.Pseudo
                </strong>
            }
            else
            {
                <strong>mdo</strong>
            }
    
         
        </a>
        <ul class="dropdown-menu dropdown-menu-dark text-small shadow" aria-labelledby="dropdownUser1">
            <li><a class="dropdown-item" href="#">Parametre</a></li>
            <li><a class="dropdown-item" href="#">Profile</a></li>
            <li><a class="dropdown-item" href="#">Se déconnecter</a></li>
        </ul>
    </div>
</div>

<style>
    .clicked-style {
        background-color: #49beb7;
        border-radius: 10px;
    }
</style>
@code {
    private Utilisateur utilisateurInfo;
    private string urlPhotoProfil = string.Empty;
    private Dictionary<string, bool> linkClickedStates = new Dictionary<string, bool>();

    bool isClicked = false;
    bool messageCount = false;
    int nbrMessages = 0;

    protected override async Task OnInitializedAsync()
    {
        linkClickedStates.Add("Annonces", false);
        linkClickedStates.Add("MessagerieInstantane", false);

        await LoadUserInfo();

        await LoadImageUrl();
    }

    private async Task LoadUserInfo()
    {
        utilisateurInfo = session.GetUserFromSession()!;
        if(utilisateurInfo == null){
            NavigationManager.NavigateTo("/SportTogether/Connexion");
        }
     // urlPhotoProfil =  await 
        // Utiliser cette information pour lier aux éléments du HTML ci-dessus

    }
    private async Task LoadImageUrl()
    {
        urlPhotoProfil = session.GetImageUrl()!;
        if (urlPhotoProfil == string.Empty)
        {
            NavigationManager.NavigateTo("/SportTogether/Connexion");
        }


    }

    void ToggleClick(string linkKey)
    {
        // Réinitialise tous les états à false
        foreach (var key in linkClickedStates.Keys.ToList())
        {
            linkClickedStates[key] = false;
        }

        // Définit l'état du lien cliqué à true
        linkClickedStates[linkKey] = true;
    }
    
}