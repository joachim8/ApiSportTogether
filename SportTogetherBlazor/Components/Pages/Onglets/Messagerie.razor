@page "/SportTogether/MessagerieInstantane"
@using SportTogetherBlazor.Models
@using System.Net.Http.Json
@inject IHttpClientFactory HttpClientFactory
@using SportTogetherBlazor.Services
@inject SessionStorageServices session

<div class="container">
    <div class="row clearfix">
        <div class="col-lg-12">
            <div class="card chat-app">
                <div id="plist" class="people-list">
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-search"></i></span>
                        </div>
                        <input type="text" class="form-control" placeholder="Search...">
                    </div>
                    <div class="list-group" id="list-tab" role="tablist">
                        @if (listGroupe.Any())
                        {
                                @foreach (Groupe groupe in listGroupe )
                                {
                                    if(groupe == listGroupe.First())
                                    {
                                        <a class="list-group-item list-group-item-action active" id="list-@groupe.Nom-list" data-toggle="list" href="#list-home" role="tab" aria-controls="@groupe.Nom">
                                            @groupe.Nom

                                        <span class="badge badge-primary badge-pill">14</span>
                                        </a>
                                       <small>@groupe.LastMessage</small>
                                    }
                                    else{
                                         <a class="list-group-item list-group-item-action" id="list-@groupe.Nom-list" data-toggle="list" href="#list-home" role="tab" aria-controls="@groupe.Nom">
                                            @groupe.Nom
                                        </a>
                                    
                                    }


                            }
                            

                        }else{
                            <p> veuillez participer ou ajouter une annonce</p>
                        }
                    </div>
                   
                </div>
               
                   
            </div>
        </div>
    </div>
</div>
@code {
    private List<Groupe> listGroupe = new();
    private HttpClient httpClient;
    private int utilisateurID = 0;
    /// <summary>
    /// Initialisation de la page
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        httpClient = HttpClientFactory.CreateClient("ApiSportTogetherClient");

        Utilisateur utilisateurInfo = session.GetUserFromSession()!;
        if(utilisateurInfo != null) utilisateurID = utilisateurInfo.UtilisateursId;
        

        await GetGroupes();
    }
    private async Task GetGroupes()
    {
        
        listGroupe = await httpClient.GetFromJsonAsync<List<Groupe>>($"Groupe/GetGroupePourMessagerie/{utilisateurID}")!;

    }
    private readonly Dictionary<int, (string color, string imageUrl)> sportStyles = new()
    {
        { 1, ("#6BDE2A", "ballon-foot.jpg") },
        { 2, ("#391E67", "basketball.jpg") },
        { 4, ("#6B1D4B", "tennis.jpg") },
        { 5, ("#D8AC2C", "athletisme.jpg") },
        { 6, ("#B36EDD", "gymnastique.jpg") },
        { 8, ("#CCF3DB", "natation.jpg") },
        { 9, ("#2C1707", "baseball.jpg") },
        { 10, ("#2A87FD", "cyclisme.jpg") },
        { 11, ("#C084BF", "volleyball.jpg") },
        { 12, ("#A78DA3", "rugby.jpg") },
        { 14, ("#A78DA3", "boxe.jpg") },
        { 15, ("#927584", "hockey.jpg") },
        { 16, ("#9A7C43", "tennis_table.jpg") },
        { 17, ("#033786", "badminton.jpg") },
        { 18, ("#6BDE2A", "poids-salles.jpg") },
        { 21, ("#391E67", "pétanque.jpg") },
        { 22, ("#6B1D4B", "yoga.jpg") },
    };

    /// <summary>
    ///
    /// </summary>
    /// <param name="sportId"></param>
    /// <returns></returns>
    private string GetSportColor(int sportId)
    {
        return sportStyles.ContainsKey(sportId) ? sportStyles[sportId].color : "#FFFFFF";
    }


    /// <summary>
    ///
    /// </summary>
    /// <param name="sportId"></param>
    /// <returns></returns>
    private string GetSportImageUrl(int sportId)
    {
        return sportStyles.ContainsKey(sportId) ? sportStyles[sportId].imageUrl : "default.jpg";
    }
}
