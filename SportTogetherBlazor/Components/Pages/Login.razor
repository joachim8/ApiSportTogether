@page "/"
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using SportTogetherBlazor.Services
@using System.Text.Json
@inject HttpClient httpClient
@inject NavigationManager NavigationManager
@inject ProtectedLocalStorage ProtectedLocalStorage
<section class="vh-100" style="background-color: #2C3B64;" justify-content="Center">
    <div class="container py-5 h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col col-xl-10">
                <div class="card" style="border-radius: 1rem;">
                    <div class="row g-0">
                        <div class="col-md-6 col-lg-5 d-none d-md-block">
                            <img src="SportTogetherImages/logo.png"
                                 alt="login form" class="img-fluid" style="border-radius: 1rem 0 0 1rem;" />
                        </div>
                        <div class="col-md-6 col-lg-7 d-flex align-items-center">
                            <div class="card-body p-4 p-lg-5 text-black align-content-center">

                                <EditForm Model="@loginModel" OnSubmit="@HandleLogin" FormName="LoginForm">

                                    <h2 class="fw-bold mb-2 text-uppercase">Connexion</h2>
                                    <p class="text-50 mb-4">Veuillez entrez votre pseudo et mot de passe !</p>

                                    <div class="form-outline mb-4">
                                        <label class="form-label" for="pseudo">Pseudo</label>
                                        <InputText id="pseudo" class="form-control form-control-lg" @bind-Value="loginModel!.Pseudo" />
                                    </div>

                                    <div class="form-outline mb-4">
                                        <label class="form-label" for="password">Mot de passe</label>
                                        <InputText id="password" type="password" class="form-control form-control-lg" @bind-Value="loginModel!.Password" />
                                        
                                    </div>

                                    <div class="pt-1 mb-4">
                                        <button class="btn btn-dark btn-lg btn-block" type="submit">Se Connecter</button>
                                    </div>

                                    <div class="form-check d-flex justify-content-start mb-4">
                                        <input class="form-check-input" type="checkbox" value="" id="rememberMe" />
                                        <label class="form-check-label" for="rememberMe"> Se souvenir de moi </label>
                                    </div>

                                    <a class="small text-muted" href="#!">Mot de passe oublié ?</a>
                                    <p class="mb-5 pb-lg-2" style="color: #2C3B64;">
                                        Vous n'avez pas de compte ? <NavLink href="Inscription" style="color: #2C3B64;">S'inscrire</NavLink>
                                    </p>
                                    <a href="#!" class="small text-muted">Terms of use.</a>
                                    <a href="#!" class="small text-muted">Privacy policy</a>

                                </EditForm>
                                @if (showErrorModal)
                                {
                                    <div class="modal" tabindex="-1" style="display:block" role="dialog">
                                        <div class="modal-dialog" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h5 class="modal-title">Erreur de connexion</h5>
                                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="() => showErrorModal = false">
                                                        <span aria-hidden="true">&times;</span>
                                                    </button>
                                                </div>
                                                <div class="modal-body">
                                                    <p>@errorMessage</p>
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="() => showErrorModal = false">Fermer</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


@code {
    [SupplyParameterFromForm(FormName = "LoginForm")]
    public LoginModel? loginModel { get; set; } // Assurez-vous qu'il est instancié.
    protected override void OnInitialized() => loginModel ??= new();
    private bool showErrorModal = false;
    private string errorMessage = "";

    private async Task HandleLogin()
    {
        var response = await httpClient.PostAsJsonAsync("auth/login", loginModel);
        if (response.IsSuccessStatusCode)
        {
                var utilisateurInfo = new UtilisateurInfo
                    {
                        Pseudo = loginModel.Pseudo,
                        Password = loginModel.Password
                    };

                await ProtectedLocalStorage.SetAsync("utilisateurInfo", utilisateurInfo);
                NavigationManager.NavigateTo("/home");
            

        }
        else
        {
            // Vous pouvez personnaliser le message d'erreur basé sur le statut de la réponse
            if (response.StatusCode == System.Net.HttpStatusCode.Unauthorized)
            {
                errorMessage = "Mauvais nom d'utilisateur ou mot de passe.";
            }
            else
            {
                errorMessage = "Une erreur s'est produite lors de la connexion. Veuillez réessayer plus tard.";
            }
            showErrorModal = true;
        }
    }
   
    public class LoginModel
    {
        public string? Pseudo { get; set; }

        public string? Password { get; set; }
    }
    public class UtilisateurInfo
    {
        public string Pseudo { get; set; } = null!;
        public string Password { get; set; } = null!;
    }
}

